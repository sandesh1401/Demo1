<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-02-16T16:14:03 IST" name="Suite" finished-at="2025-02-16T16:14:51 IST" duration-ms="47772">
    <groups>
    </groups>
    <test started-at="2025-02-16T16:14:03 IST" name="Test" finished-at="2025-02-16T16:14:51 IST" duration-ms="47772">
      <class name="tests.RegisterFTest">
        <test-method is-config="true" signature="setUpMethod()[pri:0, instance:tests.RegisterFTest@795cd85e]" started-at="2025-02-16T16:14:03 IST" name="setUpMethod" finished-at="2025-02-16T16:14:08 IST" duration-ms="4442" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="verifyRegisteringanAccountbyProvidingOnlytheMandatoryFields()[pri:1, instance:tests.RegisterFTest@795cd85e]" started-at="2025-02-16T16:14:08 IST" name="verifyRegisteringanAccountbyProvidingOnlytheMandatoryFields" finished-at="2025-02-16T16:14:09 IST" duration-ms="1839" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringanAccountbyProvidingOnlytheMandatoryFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterFTest@795cd85e]" started-at="2025-02-16T16:14:09 IST" name="tearDown" finished-at="2025-02-16T16:14:10 IST" duration-ms="212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUpMethod()[pri:0, instance:tests.RegisterFTest@795cd85e]" started-at="2025-02-16T16:14:10 IST" name="setUpMethod" finished-at="2025-02-16T16:14:13 IST" duration-ms="3589" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="verifyRegisteringanAccountbyProvidingalltheFields()[pri:2, instance:tests.RegisterFTest@795cd85e]" started-at="2025-02-16T16:14:13 IST" name="verifyRegisteringanAccountbyProvidingalltheFields" finished-at="2025-02-16T16:14:15 IST" duration-ms="1847" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringanAccountbyProvidingalltheFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.RegisterFTest@795cd85e]" started-at="2025-02-16T16:14:15 IST" name="tearDown" finished-at="2025-02-16T16:14:15 IST" duration-ms="213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.RegisterFTest -->
      <class name="tests.LoginFTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginFTest@6c64cb25]" started-at="2025-02-16T16:14:15 IST" name="setUp" finished-at="2025-02-16T16:14:19 IST" duration-ms="3360" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoggingintotheApplicationusingValidcredentials()[pri:1, instance:tests.LoginFTest@6c64cb25]" started-at="2025-02-16T16:14:19 IST" name="verifyLoggingintotheApplicationusingValidcredentials" finished-at="2025-02-16T16:14:20 IST" duration-ms="1088" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoggingintotheApplicationusingValidcredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginFTest@6c64cb25]" started-at="2025-02-16T16:14:20 IST" name="tearDown" finished-at="2025-02-16T16:14:20 IST" duration-ms="190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginFTest@6c64cb25]" started-at="2025-02-16T16:14:21 IST" name="setUp" finished-at="2025-02-16T16:14:24 IST" duration-ms="3560" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoggingintotheApplicationusingDifferentValidcredentials(java.util.HashMap)[pri:2, instance:tests.LoginFTest@6c64cb25]" started-at="2025-02-16T16:14:24 IST" name="verifyLoggingintotheApplicationusingDifferentValidcredentials" data-provider="validCredentialsSupplier" finished-at="2025-02-16T16:14:25 IST" duration-ms="1299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=sandeshmarathe1401@gmail.com, Password=manual@5}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoggingintotheApplicationusingDifferentValidcredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginFTest@6c64cb25]" started-at="2025-02-16T16:14:25 IST" name="tearDown" finished-at="2025-02-16T16:14:26 IST" duration-ms="225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginFTest@6c64cb25]" started-at="2025-02-16T16:14:26 IST" name="setUp" finished-at="2025-02-16T16:14:29 IST" duration-ms="3692" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoggingintotheApplicationusingDifferentValidcredentials(java.util.HashMap)[pri:2, instance:tests.LoginFTest@6c64cb25]" started-at="2025-02-16T16:14:29 IST" name="verifyLoggingintotheApplicationusingDifferentValidcredentials" data-provider="validCredentialsSupplier" finished-at="2025-02-16T16:14:31 IST" duration-ms="1104" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=sandeshmarathe11@gmail.com, Password=abcde}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoggingintotheApplicationusingDifferentValidcredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginFTest@6c64cb25]" started-at="2025-02-16T16:14:31 IST" name="tearDown" finished-at="2025-02-16T16:14:31 IST" duration-ms="184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginFTest@6c64cb25]" started-at="2025-02-16T16:14:31 IST" name="setUp" finished-at="2025-02-16T16:14:34 IST" duration-ms="3343" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoggingintotheApplicationusingDifferentValidcredentials(java.util.HashMap)[pri:2, instance:tests.LoginFTest@6c64cb25]" started-at="2025-02-16T16:14:34 IST" name="verifyLoggingintotheApplicationusingDifferentValidcredentials" data-provider="validCredentialsSupplier" finished-at="2025-02-16T16:14:35 IST" duration-ms="1279" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=sandeshmarathe11@gmail.com, Password=abcde}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoggingintotheApplicationusingDifferentValidcredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginFTest@6c64cb25]" started-at="2025-02-16T16:14:35 IST" name="tearDown" finished-at="2025-02-16T16:14:36 IST" duration-ms="189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginFTest@6c64cb25]" started-at="2025-02-16T16:14:36 IST" name="setUp" finished-at="2025-02-16T16:14:39 IST" duration-ms="3638" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoggingintotheApplicationusingDifferentValidcredentials(java.util.HashMap)[pri:2, instance:tests.LoginFTest@6c64cb25]" started-at="2025-02-16T16:14:39 IST" name="verifyLoggingintotheApplicationusingDifferentValidcredentials" data-provider="validCredentialsSupplier" finished-at="2025-02-16T16:14:40 IST" duration-ms="1125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=sandeshmarathe11@gmail.com, Password=abcde}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoggingintotheApplicationusingDifferentValidcredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginFTest@6c64cb25]" started-at="2025-02-16T16:14:40 IST" name="tearDown" finished-at="2025-02-16T16:14:40 IST" duration-ms="205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginFTest@6c64cb25]" started-at="2025-02-16T16:14:40 IST" name="setUp" finished-at="2025-02-16T16:14:44 IST" duration-ms="3939" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoggingintotheApplicationusingDifferentValidcredentials(java.util.HashMap)[pri:2, instance:tests.LoginFTest@6c64cb25]" started-at="2025-02-16T16:14:44 IST" name="verifyLoggingintotheApplicationusingDifferentValidcredentials" data-provider="validCredentialsSupplier" finished-at="2025-02-16T16:14:50 IST" duration-ms="5898" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=sandeshmarathe11@gmail.com, Password=abcd}]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[@class='list-group-item'][text()='Logout']"}
  (Session info: chrome=132.0.6834.197)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [964fad4147f8196335d118bbd6e46d27, findElement {value=//a[@class='list-group-item'][text()='Logout'], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 132.0.6834.197, chrome: {chromedriverVersion: 132.0.6834.159 (2d77d3fc445..., userDataDir: C:\Users\Sandesh Marathe\Ap...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:49718}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:49718/devtoo..., se:cdpVersion: 132.0.6834.197, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 964fad4147f8196335d118bbd6e46d27]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[@class='list-group-item'][text()='Logout']"}
  (Session info: chrome=132.0.6834.197)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [964fad4147f8196335d118bbd6e46d27, findElement {value=//a[@class='list-group-item'][text()='Logout'], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 132.0.6834.197, chrome: {chromedriverVersion: 132.0.6834.159 (2d77d3fc445..., userDataDir: C:\Users\Sandesh Marathe\Ap...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:49718}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:49718/devtoo..., se:cdpVersion: 132.0.6834.197, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 964fad4147f8196335d118bbd6e46d27
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy12.isDisplayed(Unknown Source)
at pages.MyRightColumnOptionPage.isUserLogIn(MyRightColumnOptionPage.java:21)
at tests.LoginFTest.verifyLoggingintotheApplicationusingDifferentValidcredentials(LoginFTest.java:67)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoggingintotheApplicationusingDifferentValidcredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginFTest@6c64cb25]" started-at="2025-02-16T16:14:50 IST" name="tearDown" finished-at="2025-02-16T16:14:51 IST" duration-ms="241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LoginFTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
